class Solution {
public:
   
    int singleNonDuplicate(vector<int>& nums) {
        int n=nums.size();
        if(n==1)
            return nums[0];
        int low=0,high=n-1,mid=0;
        while(low<=high)
        {
            
            mid=low+(high-low)/2;
            cout<<low<<" "<<high<<" "<<mid<<endl;
            if( mid<(n-1) && nums[mid]==nums[mid+1]){
                if(((n-1)-mid)%2==0)
                    low=mid+1;
                else
                    high=mid-1;
            }
            else if(mid>0 && nums[mid]==nums[mid-1]){
                cout<<low<<" "<<high<<" "<<mid<<".."<<endl;
                if((mid-0)%2==0)
                    high=mid-1;
                else{
                    low=mid+1;
                cout<<low<<" "<<high<<" "<<mid<<".."<<endl;
                }
            }
            else
                break;
        
        }
     return nums[mid];   
    }
};